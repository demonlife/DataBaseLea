* 基本术语
** 文档
   是mongodb的核心概念, 多个键及其关联的值有序地放置在一起
   1. 文档中的键值对是有序的(通常文档中的键的顺序不重要)
   2. 文档中的值可以不仅仅是字符串, 还可以是其他几种数据类型
   3. 文档的键是字符串, 除少数例外情况, 键可以是任意UTF-8字符
   4. 键不能含有\0(空字符), 该字符用来表示键的结尾
   5. ./$有特别的意义, 特定环境下才能使用
   6. 以_开头的键是保留的, 但不是严格要求的
   7. mongodb的键区分大小写, 值是区分类型的
   8. 文档不能有重复的键
** 集合
   集合是无模式的
   1. 集合名不能是空字符串
   2. 集合名不能含有\0字符
   3. 集合名不能以system. 开头
   4. 用户创建的集合名字不能含有保留字符$
   5. 很多mongodb工具都包含子集合
   6. GridFS是一种存储大文件的协议
   7. MongoDB的web控制台通过子集合的方式将数据组织在DBTOP部分
** 数据库
   多个集合可以组成数据库
   1. 数据库名不能是空字符
   2. 数据库名不得含有空格.$/\和\0
   3. 应全部小写
   4. 最多64字节
   5. 数据库名最终会变成文件系统里的文件
   6. 有些数据库名是保留的, 如:
      admin: 这是"root"数据库, 将用户添加到该数据库, 则该用户自动继承所有数据库的权限
      local: 该数据库永远不会被复制, 可用来存储限于本地单台服务器的任意集合
      config: 当mongodb用于分片设置时, 该数据库在内部使用, 用于保存分片的相关信息
** 启动
   ./mongod 默认的数据目录是/data/db, 使用27017端口, http服务器的端口是28017
** 基本操作
   1. 创建
      post = {'title': 'My Blog Post', 'content': 'here's my blog post.',
          'data': new Date()}
      db.blog.insert(post) #=> 向blog集合中插入数据post
   2. 查看
      db.blog.find()
   3. 更新
      使用update来更新, update接受至少两个参数, 第一个是要更新文档的限定条件, 第二个是新的文档
   4. 删除
      remove从数据库中永久性的删除文档. 在不使用参数进行调用的情况下, 会删除一个集合内的所有文档
** mongodb shell的使用
   help: 获取帮助
   有个了解函数的技巧: 在输入的时候不要输入括号, 这样就会显示该函数的javascript源代码
   当有属性与目标集合同名时, 可以使用getCollection函数
   db.getCollection("version")
   var collections = ["posts", "comments", "authors"]
   for (i in collections) {
       // i = 0, 1, 2
   }
   
